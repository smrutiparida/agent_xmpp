# Original from XMPP4R - XMPP Library for Ruby Website::http://home.gna.org/xmpp4r/
##############################################################################################################
module AgentXmpp

  #####-------------------------------------------------------------------------------------------------------
  module Xmpp

    #####-------------------------------------------------------------------------------------------------------
    class Message < XMPPStanza

      #####-----------------------------------------------------------------------------------------------------
      class << self
        
        #.........................................................................................................
        def chat(to, body)
          message = Xmpp::Message.new(to, body)
          message.type = :chat
          Send(message)  
        end
      
      #### self
      end

      #.......................................................................................................
      name_xmlns 'message', 'jabber:client'
      force_xmlns true

      #.......................................................................................................
      include XParent

      #.......................................................................................................
      def initialize(to = nil, body = nil)
        super()
        if not to.nil?
          set_to(to)
        end
        if !body.nil?
          add_element(REXML::Element.new("body").add_text(body))
        end
      end

      #.......................................................................................................
      def body
        first_element_text('body')
      end

      #.......................................................................................................
      def body=(b)
        replace_element_text('body', b)
      end

      #.......................................................................................................
      def set_body(b)
        self.body = b
        self
      end

      #.......................................................................................................
      def subject=(s)
        replace_element_text('subject', s)
      end

      #.......................................................................................................
      def set_subject(s)
        self.subject = s
        self
      end

      #.......................................................................................................
      def subject
        first_element_text('subject')
      end

      #.......................................................................................................
      def thread=(s)
        delete_elements('thread')
        replace_element_text('thread', s) unless s.nil?
      end

      #.......................................................................................................
      def set_thread(s)
        self.thread = s
        self
      end

      #.......................................................................................................
      def thread
        first_element_text('thread')
      end
      
    #### Message
    end
    
  #### XMPP
  end

#### AgentXmpp
end
