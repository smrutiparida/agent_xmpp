# Original from XMPP4R - XMPP Library for Ruby Website::http://home.gna.org/xmpp4r/
##############################################################################################################
module AgentXmpp

  #####-------------------------------------------------------------------------------------------------------
  module Xmpp

    #####-------------------------------------------------------------------------------------------------------
    class Message < Stanza

      #.......................................................................................................
      name_xmlns 'message', 'jabber:client'
      xmpp_child :actions, :event

      #####-----------------------------------------------------------------------------------------------------
      class << self
        
        #.........................................................................................................
        def chat(to, body)
          message = Xmpp::Message.new(to, body)
          message.type = :chat
          Send(message)  
        end
      
      #### self
      end

      #.......................................................................................................
      include XParent

      #.......................................................................................................
      def initialize(to = nil, body = nil)
        super()
        self.to = to if to
        add_element(REXML::Element.new("body").add_text(body)) if body
      end

      #.......................................................................................................
      def type
        stanza_type = attributes['type']
        stanza_type.nil? ? :normal : stanza_type.to_sym
      end

      #.......................................................................................................
      def body
        first_element_text('body')
      end

      #.......................................................................................................
      def body=(b)
        replace_element_text('body', b)
      end

      #.......................................................................................................
      def subject=(s)
        replace_element_text('subject', s)
      end

      #.......................................................................................................
      def subject
        first_element_text('subject')
      end

      #.......................................................................................................
      def thread=(s)
        delete_elements('thread')
        replace_element_text('thread', s) if s
      end

      #.......................................................................................................
      def thread
        first_element_text('thread')
      end
      
    #### Message
    end
    
  #### XMPP
  end

#### AgentXmpp
end
