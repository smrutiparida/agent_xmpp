# Original from XMPP4R - XMPP Library for Ruby Website::http://home.gna.org/xmpp4r/
##############################################################################################################
module AgentXmpp

  #####-------------------------------------------------------------------------------------------------------
  module Xmpp

    #####-------------------------------------------------------------------------------------------------------
    class Stanza < Element

      #.......................................................................................................
      def Stanza.answer(stanza, import=true)
        x = stanza.class.new
        if import
          x.import(stanza)
        end
        x.from = stanza.to
        x.to = stanza.from
        x.id = stanza.id
        x
      end

      #.......................................................................................................
      def error
        first_element('error')
      end

      #.......................................................................................................
      def answer(import=true)
        Stanza.answer(self, import)
      end

      #.......................................................................................................
      def normalize
      end

      #.......................................................................................................
      def to
        (a = attribute('to')).nil? ? a : JID.new(a.value)
      end

      #.......................................................................................................
      def to=(v)
        add_attribute('to', v ? v.to_s : nil)
      end

      #.......................................................................................................
      def from
        (a = attribute('from')).nil? ? a : JID.new(a.value)
      end

      #.......................................................................................................
      def from=(v)
        add_attribute('from', v ? v.to_s : nil)
      end

      #.......................................................................................................
      def id
        (a = attribute('id')).nil? ? a : a.value
      end

      #.......................................................................................................
      def id=(v)
        add_attribute('id', v.to_s)
      end

      #.......................................................................................................
      def type
        stanza_type = attributes['type']
        stanza_type.nil? ? nil : stanza_type.to_sym
      end

      #.......................................................................................................
      def type=(t)
        attributes['type'] = t.to_s
      end

    #### XMPPStanza
    end
    
  #### XMPP
  end

#### AgentXmpp
end
