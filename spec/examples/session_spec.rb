require 'spec_helper'

##########################################################################################################################################################################
describe 'session protocol' do
##########################################################################################################################################################################

  #.......................................................................................................................................................................
  let(:client) {AgentXmpp::MessagePipe.new}
  let(:agent_jid) {AgentXmpp::Xmpp::Jid.new('agent@nowhere.com/testing')}
  let(:admin) {AgentXmpp::Xmpp::Jid.new('troy@somewhere.com/there')}
  let(:user) {AgentXmpp::Xmpp::Jid.new('vanessa@thhee.com/where')}
  let(:config) {{'jid' => agent_jid.to_s, 'password' => 'pass', 'roster' => [{'jid' => admin, 'groups' => ['admin']}, {'jid' => user, 'groups' => ['user']}]}}

  #.......................................................................................................................................................................
  def new_delegate
  end

  #.......................................................................................................................................................................
  before(:each) do
    client.connection = mock('connection')
    client.connection.stub!(:reset_parser)
    client.connection.stub!(:error?).and_return(false)    
    AgentXmpp::Boot.stub!(:boot).and_return(nil)
    AgentXmpp.config = config
  end
  
  ####**********************************************************************************************************************************************************************
  context 'when TCP connection to server is established' do

    ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
    it 'should send XML version message and stream initialization message' do
      messages = [SessionMessages.send_supported_xml_version(agent_jid), SessionMessages.send_stream(agent_jid)]
      client.connection.should_receive(:send_data).once.with(messages.first).and_return(messages.first)
      client.connection.should_receive(:send_data).once.with(messages.last).and_return(messages.last)
      client.connection_completed.should == messages
    end
  
  end

  ####**********************************************************************************************************************************************************************
  context 'when connection status is not authenticated' do
    
    ####**********************************************************************************************************************************************************************
    context 'before preauthenticate stream features' do
  
      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'on_authenticate callback should not have been called' do
      end
  
      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'on_preauthenticate_features callback should not have been called' do
      end
  
      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'on_did_not_authenticate callback should not have been called' do
      end
      
    end
  
    ####**********************************************************************************************************************************************************************
    context 'when preauthenticate stream features are received' do
  
      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'on_preauthenticate_features callback should have been called' do
      end
  
      ####**********************************************************************************************************************************************************************
      context 'with PLAIN authentication' do
  
        ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
        it 'should send a PLAIN authentication message' do
        end
  
      end
  
      ####**********************************************************************************************************************************************************************
      context 'without PLAIN authentication' do
  
        ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
        it 'should raise an exception' do
        end
  
      end
  
    end
  
    ####**********************************************************************************************************************************************************************
    context 'when the PLAIN authentication success message is received' do
  
      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'should send stream initialization message' do
      end

      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'on_authenticate callback should have been called' do
      end
      
      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'connection status should be authenticated' do
      end
      
      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'on_did_not_authenticate callback should not have been called' do
      end
            
    end
  
    ####**********************************************************************************************************************************************************************
    context 'when the PLAIN authentication failure message is received' do
  
      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'should raise an exception' do
      end
  
      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'on_authenticate callback should not have been called' do
      end
  
      ####--------------------------------------------------------------------------------------------------------------------------------------------------------------------
      it 'on_did_not_authenticate callback should have been called' do
      end
      
    end
     
  end
  
  ####**********************************************************************************************************************************************************************
  context 'when connection status is authenticated' do
  
    ####**********************************************************************************************************************************************************************
    context 'before postauthenticate stream features are received' do
    end

    ####**********************************************************************************************************************************************************************
    context 'when postauthenticate stream features ae received' do
    end
  
    ####**********************************************************************************************************************************************************************
    context 'when bind resource success message is received' do
    end

    ####**********************************************************************************************************************************************************************
    context 'when bind resource failure message is received' do
    end
    
  end
  
end
